# This script writes the .xs file to stdout.  It reads a list of RTcmix
# function names from a file, and includes them in the .xs code, so that
# Perl will recognize them in RTcmix user scripts.     -JGG, 28-Jul-00

# location of rtcmix and name of extension passed in as args
$cmixdir = $ARGV[0];
$module = $ARGV[1];

$maxdispargs_h = "\"$cmixdir/H/maxdispargs.h\"";
$funclist = "./funclist";

# Open file with RTcmix function names, one per line.  Save these so that
# we can use them below to build the ALIAS lines and <_rtcmix_funcs> strings.

open FUNCLIST, "< $funclist" || die "Can't open $funclist ($!)";

while (<FUNCLIST>) {
   chop;
   push(@functions, $_);
}
close FUNCLIST;


# Print out the .xs file.
# NOTE NOTE NOTE: Make sure the prototype of parse_dispatch is correct!

print qq~
/* This file generated by the "make_rtxs.pl" script.  Don't edit! */

#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"
#include $maxdispargs_h

extern double parse_dispatch(char *, double [], short);

static char *_rtcmix_funcs[] = {"",
~;

# Initialize _rtcmix_funcs[] with names of functions.
foreach $func (@functions) {
   print "   \"$func\",\n";
}
print "};\n";

print qq~
MODULE = $module     PACKAGE = $module

double
_rtcmix_perl_glue(...)
   ALIAS:
~;

# Write function ALIAS statements.
$index = 1;
foreach $func (@functions) {
   print "      $func = $index\n";
   $index++;
}

print qq~
   CODE:
      {
         int      i;
         double   pp[MAXDISPARGS];

         if (items > MAXDISPARGS)
            croak("Too many arguments to %s.", _rtcmix_funcs[ix]);

         for (i = 0; i < items; i++) {
            if (SvPOK(ST(i))) {
               STRLEN   len;
               int      anint;
               char     *str;

# FIXME: may need to strdup <str>, since perl might garbage-collect it
               str = SvPV(ST(i), len);
               anint = (int) str;
               pp[i] = (double) anint;
            }
            else
               pp[i] = SvNV(ST(i));
         }

         RETVAL = parse_dispatch(_rtcmix_funcs[ix], pp, (short) items);
      }
   OUTPUT:
      RETVAL

~;

