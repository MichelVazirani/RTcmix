# Change stuff in here as needed

# The directory containing the RTcmix directory
TOPDIR = /usr/local/src

# The name of the RTcmix directory
CMIXDIR = $(TOPDIR)/RTcmix-3.6

# The dir that will contain the instrument dynamic shared objects
LIBDESTDIR = $(CMIXDIR)/shlib

# Dirs in which to install documentation
MANDESTDIR = $(CMIXDIR)/docs/man
HTMLDESTDIR = $(CMIXDIR)/docs/html

# add new instruments to this list (e.g., insts.std, insts.jg)
INST_DIRS = insts.base # insts.std insts.jg insts.stk insts.vccm

# add new packages to this list (e.g., imbed)
PACKAGE_DIRS = # imbed

# Which platform?
ARCH = LINUX
#ARCH = MACOSX
#ARCH = SGI
#ARCH = FREEBSD

# optimization, debugging and warning flags
OPT = -g -Wall -Wno-unused -O2
# for Irix, try just...
#OPT = -O2

# Uncomment this to enable use of the Perl front end to RTcmix.
# This requires a perl version >= 5.005_62.
#PERL_SUPPORT = TRUE
# Say which perl to use: just "perl" if you only have one; otherwise,
# give full path name of perl to use, e.g., /usr/local/bin/perl.
PERL = perl

# Uncomment this to enable use of the Python front end to RTcmix.
#PYTHON_SUPPORT = TRUE
# Say which python to use: just "python" if you only have one; otherwise,
# give full path name of python to use, e.g., /usr/local/bin/python.
PYTHON = python

# Uncomment this to enable code that lets you send and receive audio
# sound over a network.  (See comments at the top of utils/nplay.c.)
#NPLAY_SUPPORT = TRUE

# Uncomment to use old function table assignments for certain instruments.
# For example, WAVETABLE used to expect function 1 to contain the wavetable
# and function 2 to contain the amp envelope. We swapped these so that you
# can use setline to give the amp envelope. But if you prefer compatibility
# with your existing scores, uncomment this line:
#CMIX_FLAGS += -DCOMPATIBLE_FUNC_LOCS

# Comment this out to set the die() function so that it will not exit on
# encountering an error (you may want to do this if you are using
# RTcmix in the context of another application where you don't want
# to terminate the application because of an RTcmix error
CMIX_FLAGS += -DEXIT_ON_ERROR

###############################################################
# Linux sound driver flags -- ignore for Irix and Mac OS X
# It doesn't matter how any of these are set for Irix and Mac OS X.
# The Linux flags should work for FreeBSD, using OSS or an emulation of the OSS API, or ALSA if
# it is installed.

# Linux Sound driver API
#AUDIODRIVER=ALSA
AUDIODRIVER=OSS

SOUND_DRIVER = -D$(AUDIODRIVER)

# Uncomment if your sound driver uses the same device file for input and
# output. This is true if you have a Creative/Ensoniq AudioPCI, or similar
# consumer card.
#SOUND_DRIVER += -DSHARED_AUDIO_DEV

# Uncomment if your sound driver uses multiple mono devices.
#SOUND_DRIVER += -DMONO_DEVICES

# Uncomment if your sound card always needs to use its maximum number of
# channels, even when you request fewer (in rtsetparams).
# NOTE: This seems to be broken right now.  Leave it commented out.
#SOUND_DRIVER += -DUSE_CARD_CHANS


###############################################################
# Shouldn't need to edit below this line
###############################################################

LIBDIR = $(CMIXDIR)/lib
DESTDIR = $(CMIXDIR)/bin
BINDIR = $(DESTDIR)

# Compile and link time flags

ifeq ($(ARCH),LINUX)
  ARCHFLAGS = -D_REENTRANT -DLINUX -DRTUPDATE
  CC = gcc 
  CXX = g++ 
  LD = ld
  MAKE = make
  INSTALL = cp -f
#  INSTALL = ln -fs
  SHELL = /bin/sh
endif
ifeq ($(ARCH),MACOSX)
  ARCHFLAGS = -D_REENTRANT -DMACOSX
  CC = cc
  CXX = c++
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = ranlib
  SHELL = /bin/sh
endif
ifeq ($(ARCH),SGI)
  ARCHFLAGS = -D_REENTRANT -DSGI -DRTUPDATE
  CC = cc -Xcpluscomm
  CXX = CC
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  SHELL = /bin/sh
endif
ifeq ($(ARCH),FREEBSD)
  ARCHFLAGS = -D_REENTRANT -DFREEBSD -DLINUX -DRTUPDATE
  CC = gcc
  CXX = g++
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  SHELL = /bin/sh
endif

INCLUDES = -I$(CMIXDIR)/H

ifeq ($(NPLAY_SUPPORT), TRUE)
CMIX_FLAGS += -DNETPLAYER
endif

CFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)
CXXFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)

# Library flags

SNDLIB = ../sndlib/sndlib.a

ifeq ($(ARCH),LINUX)
	ifeq ($(AUDIODRIVER),ALSA)
	  SYSLIBS = -lasound -lpthread -lm -ldl #-lefence
	else
	  SYSLIBS = -lpthread -lm -ldl #-lefence
	endif
  LDFLAGS = $(OPT) $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYN = -rdynamic
endif
ifeq ($(ARCH),MACOSX)
  SYSLIBS = 
  LDFLAGS = $(SYSLIBS) -framework CoreAudio
  SHARED_LDFLAGS = -bundle -flat_namespace -undefined suppress
  DYN = 
endif
ifeq ($(ARCH),SGI)
  SYSLIBS = -lpthread -laudio -lm
  LDFLAGS = $(SYSLIBS)
  SHARED_LDFLAGS = -shared -update_registry $(LIBDESTDIR)/so_locations
  DYN = 
endif
ifeq ($(ARCH),FREEBSD)
  SYSLIBS = -pthread -lm -ll
  LDFLAGS = -export-dynamic $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYN = -rdynamic
endif

# For benefit of inst makefiles that live outside CMIXDIR hierarchy
UGENS_H = $(CMIXDIR)/H/ugens.h

# for rt insts
INSTRUMENT_H = $(CMIXDIR)/rtstuff/Instrument.h
PROFILE_O = $(CMIXDIR)/rtstuff/profile.o

# for disk-based insts
RTPROFILE_O = $(CMIXDIR)/rtstuff/rtprofile.o

GENLIB = $(LIBDIR)/genlib.a
CMIX_O = $(CMIXDIR)/sys/cmix.o
M_O = $(CMIXDIR)/Minc/m.o
IMB_RTCMIX_O = $(CMIXDIR)/Minc/imbRTcmix.o
P_O = $(CMIXDIR)/Minc/p.o
PY_O = $(CMIXDIR)/Minc/py.o

CMIXOBJS = $(CMIX_O) $(M_O) $(GENLIB)
IMBCMIXOBJS = $(CMIX_O) $(IMB_RTCMIX_O) $(GENLIB)

