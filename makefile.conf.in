# Change stuff in here as needed

# The directory containing the RTcmix directory
TOPDIR = /users/jmr6u

# The name of the RTcmix directory
CMIXDIR = $(TOPDIR)/RTcmix

# The dir that will contain links to the instrument dynamic shared objects
LIBDESTDIR = $(CMIXDIR)/shlib

# add new instruments to this list (e.g., insts.std, insts.jg)
INST_DIRS = insts.vccm insts.base # insts.std insts.rtperf

# add new packages to this list (e.g., interfaces.std)
PACKAGE_DIRS =

# Which platform?
ARCH = LINUX
#ARCH = SGI

# Sound driver API for Linux (and other than SGI)
# NOTE: no support for ALSA yet, sorry
SOUND_DRIVER = -DOSS
#SOUND_DRIVER = -DALSA

# Uncomment if your sound driver uses the same device file for input and
# output. This is true if you have a Creative/Ensoniq AudioPCI, or similar
# consumer card.
SOUND_DRIVER += -DSHARED_AUDIO_DEV

# Uncomment if your sound driver uses multiple mono devices.
#SOUND_DRIVER += -DMONO_DEVICES

# Uncomment if your sound card always needs to use its maximum number of
# channels, even when you request fewer (in rtsetparams).
# NOTE: This seems to be broken right now.  Leave it commented out.
#SOUND_DRIVER += -DUSE_CARD_CHANS

# optimization, debugging and warning flags
OPT = -g -Wall -Wno-unused -O2
# for Irix, try just...
#OPT = -O2

# Uncomment this to enable use of the Perl front end to RTcmix.
# This requires a perl version >= 5.005_62.
#PERL_SUPPORT = TRUE

# Uncomment this to enable use of the Python front end to RTcmix.
# This has been tested only with Python 1.5.2, but should work for more
# recent versions.
#PYTHON_SUPPORT = TRUE

# Uncomment to use old function table assignments for certain instruments.
# For example, WAVETABLE used to expect function 1 to contain the wavetable
# and function 2 to contain the amp envelope. We swapped these so that you
# can use setline to give the amp envelope. But if you prefer compatibility
# with your existing scores, uncomment this line:
#CMIX_FLAGS += -DCOMPATIBLE_FUNC_LOCS

###############################################################
# Shouldn't need to edit below this line
###############################################################

LIBDIR = $(CMIXDIR)/lib
DESTDIR = $(CMIXDIR)/bin
BINDIR = $(DESTDIR)

# Compile and link time flags

ifeq ($(ARCH),LINUX)
  ARCHFLAGS = -D_REENTRANT -DLINUX
  CC = gcc 
  CXX = g++ 
  LD = ld
  MAKE = make
#  INSTALL = cp -f
  INSTALL = ln -fs
  SHELL = /bin/sh
endif
ifeq ($(ARCH),SGI)
  ARCHFLAGS = -D_REENTRANT -DSGI
  CC = cc -Xcpluscomm
  CXX = CC
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  SHELL = /bin/sh
endif

INCLUDES = -I$(CMIXDIR)/H

CFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)
CXXFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)

# Library flags

SNDLIB = ../sndlib/sndlib.a

ifeq ($(ARCH),LINUX)
  SYSLIBS = -lpthread -lm -ldl -lefence
  LDFLAGS = $(SYSLIBS)
  SHARED_LDFLAGS = -shared 
endif
ifeq ($(ARCH),SGI)
  SYSLIBS = -lpthread -laudio -lm
  LDFLAGS = $(SYSLIBS)
  SHARED_LDFLAGS = -shared -update_registry $(LIBDESTDIR)/so_locations
endif

# For benefit of inst makefiles that live outside CMIXDIR hierarchy
UGENS_H = $(CMIXDIR)/H/ugens.h

# for rt insts
INSTRUMENT_H = $(CMIXDIR)/rtstuff/Instrument.h
PROFILE_O = $(CMIXDIR)/rtstuff/profile.o

# for disk-based insts
RTPROFILE_O = $(CMIXDIR)/rtstuff/rtprofile.o

GENLIB = $(LIBDIR)/genlib.a
CMIX_O = $(CMIXDIR)/sys/cmix.o
M_O = $(CMIXDIR)/Minc/m.o
P_O = $(CMIXDIR)/Minc/p.o
PY_O = $(CMIXDIR)/Minc/py.o

CMIXOBJS = $(CMIX_O) $(M_O) $(GENLIB)

