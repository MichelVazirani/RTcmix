# Change stuff in here as needed

# The directory containing the RTcmix directory
TOPDIR = /usr/local/src

# The name of the RTcmix directory
CMIXDIR = $(TOPDIR)/RTcmix-4.0

# The path to this file
MAKEFILE_CONF = $(CMIXDIR)/makefile.conf

# The dir that will contain the instrument dynamic shared objects
LIBDESTDIR = $(CMIXDIR)/shlib

# Dirs in which to install documentation
MANDESTDIR = $(CMIXDIR)/docs/man
HTMLDESTDIR = $(CMIXDIR)/docs/html

# add new instruments to this list (e.g., insts/std, insts/jg)
INST_DIRS = insts/base # insts/std insts/jg insts/stk insts/vccm

# add new packages to this list (e.g., apps/imbed)
PACKAGE_DIRS = # apps/imbed

# Which platform?
ARCH = LINUX
#ARCH = MACOSX
#ARCH = SGI
#ARCH = FREEBSD

# optimization, debugging and warning flags
OPT = -g -Wall -Wno-unused -O2
# for Irix, try just...
#OPT = -O2

# Uncomment this to enable use of the Perl front end to RTcmix.
# This requires a perl version >= 5.005_62.
#PERL_SUPPORT = TRUE
# Say which perl to use: just "perl" if you only have one; otherwise,
# give full path name of perl to use, e.g., /usr/local/bin/perl.
PERL = perl
# Set this to FALSE if your perl libraries are NOT in /usr/local/lib,
# but rather are installed in /usr/lib.
PERL_IN_LOCAL_LIB = FALSE

# Uncomment this to enable use of the Python front end to RTcmix.
#PYTHON_SUPPORT = TRUE
# Say which python to use: just "python" if you only have one; otherwise,
# give full path name of python to use, e.g., /usr/local/bin/python.
PYTHON = python
# We use a python extension to make RTcmix commands accessible inside
# python.  The default is to link this extension statically.  If you
# would like (or need) to link it dynamically, comment out the following
# symbol.  Then go into src/parser/python and "make install" as root.
# That will copy the extension into your system-wide site-packages dir,
# where PYMIX will be able to find it at run time.
PYTHON_EXT_LINK = TRUE

# Uncomment this to enable code that lets you send and receive audio
# sound over a network.  (See comments at the top of utils/nplay.c.)
#NPLAY_SUPPORT = TRUE

# Comment this out to set the die() function so that it will not exit on
# encountering an error (you may want to do this if you are using
# RTcmix in the context of another application where you don't want
# to terminate the application because of an RTcmix error
CMIX_FLAGS += -DEXIT_ON_ERROR

# This is the default for non-Linux systems -- leave it, and override below
# if you are running LINUX
AUDIODRIVER = AUTO

# Uncomment to enable new experimental pfield update scheme and Minc v.2
PFIELD_CLASS_SUPPORT = TRUE

###############################################################
# Linux sound driver flags -- ignore for Irix and Mac OS X
# It doesn't matter how any of these are set for Irix and Mac OS X.
# The Linux flags should work for FreeBSD, using OSS or an emulation of 
# the OSS API, or ALSA if it is installed.

# Linux Sound driver API -- overrides default
#AUDIODRIVER = ALSA
AUDIODRIVER = OSS

SOUND_DRIVER = -D$(AUDIODRIVER)

###############################################################
# Shouldn't need to edit below this line
###############################################################

LIBDIR = $(CMIXDIR)/lib
DESTDIR = $(CMIXDIR)/bin
BINDIR = $(DESTDIR)
INCLUDEDIR = $(CMIXDIR)/include

SRCDIR = $(CMIXDIR)/src
AUDIODIR = $(SRCDIR)/audio
CONFDIR = $(SRCDIR)/conf
PARSERDIR = $(SRCDIR)/parser
MINCDIR = $(PARSERDIR)/minc
PERLDIR = $(PARSERDIR)/perl

# For temporary use in linking MIX instrument in
MIXDIR = insts/base/MIX

MINCLIB = $(MINCDIR)/libminc.a
SNDLIB = $(SRCDIR)/sndlib/sndlib.a
AUDIOLIB = $(AUDIODIR)/librtaudio.a

# Compile and link time flags

ifeq ($(ARCH),LINUX)
  ARCHFLAGS = -D_REENTRANT -DLINUX #-DRTUPDATE
  CC = gcc 
  CXX = g++ 
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = touch
#  INSTALL = ln -fs
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif
ifeq ($(ARCH),MACOSX)
  ARCHFLAGS = -D_REENTRANT -DMACOSX -fno-common
  CC = cc
  CXX = c++
  LD = ld
  MAKE = make
  INSTALL = cp -f
  RANLIB = ranlib
  SHELL = /bin/sh
  SHLIB_SUFFIX = dylib
endif
ifeq ($(ARCH),SGI)
  ARCHFLAGS = -D_REENTRANT -DSGI -DRTUPDATE
  CC = cc -Xcpluscomm
  CXX = CC
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif
ifeq ($(ARCH),FREEBSD)
  ARCHFLAGS = -D_REENTRANT -DFREEBSD -DLINUX -DRTUPDATE
  CC = gcc
  CXX = g++
  LD = ld
  MAKE = gmake
  INSTALL = cp -f
  RANLIB = touch
  SHELL = /bin/sh
  SHLIB_SUFFIX = so
endif

INCLUDES = -I. -I$(CMIXDIR)/include

ifeq ($(NPLAY_SUPPORT), TRUE)
CMIX_FLAGS += -DNETAUDIO
endif
ifeq ($(PFIELD_CLASS_SUPPORT), TRUE)
CMIX_FLAGS += -DPFIELD_CLASS
endif

CFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)
CXXFLAGS = $(INCLUDES) $(OPT) $(ARCHFLAGS) $(CMIX_FLAGS)

# Platform-independent library flags

RTLIB = librtcmix.$(SHLIB_SUFFIX)
LIBRTCMIX = $(LIBDIR)/$(RTLIB)
RTLDFLAGS = -L$(LIBDIR) -lrtcmix

GENLIB = $(LIBDIR)/libgen.a

# Platform-specific library flags Key:
#
# SYSLIBS:              Libraries which DSOs link against.
# SHARED_LDFLAGS:       Linker flags when creating DSOs.
# CMIXOBJS:             Non-lib .o files which standalone binaries need.
# LDFLAGS:              Libraries which standalone binaries link against.
# IMBCMIXOBJS:          Non-lib .o files which imbedded binaries need.

ifeq ($(ARCH),LINUX)
	ifeq ($(AUDIODRIVER),ALSA)
	  SYSLIBS = -lasound -lpthread -lm -ldl #-lefence
	else
	  SYSLIBS = -lpthread -lm -ldl #-lefence
	endif
  ARCH_RTLDFLAGS =
  DSO_LDFLAGS = $(OPT) $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYN = -rdynamic
endif
ifeq ($(ARCH),MACOSX)
  SYSLIBS = -framework CoreAudio
  ARCH_RTLDFLAGS = -dylib_file /usr/lib/$(RTLIB):$(LIBRTCMIX)
  DSO_LDFLAGS = $(SYSLIBS)
  SHARED_LDFLAGS = -bundle -flat_namespace -undefined suppress
  DYN = 
endif
ifeq ($(ARCH),SGI)
  SYSLIBS = -lpthread -laudio -lm
  ARCH_RTLDFLAGS =
  DSO_LDFLAGS = $(SYSLIBS)
  SHARED_LDFLAGS = -shared -update_registry $(LIBDESTDIR)/so_locations
  DYN = 
endif
ifeq ($(ARCH),FREEBSD)
  SYSLIBS = -pthread -lm -ll
  ARCH_RTLDFLAGS =
  DSO_LDFLAGS = -export-dynamic $(SYSLIBS)
  SHARED_LDFLAGS = -shared -Wl,-soname,$@
  DYN = -rdynamic
endif

LDFLAGS = $(ARCH_RTLDFLAGS) $(RTLDFLAGS)

# For benefit of inst makefiles that live outside CMIXDIR hierarchy
UGENS_H = $(CMIXDIR)/include/ugens.h

# for rt insts
INSTRUMENT_H = $(CMIXDIR)/include/Instrument.h
PROFILE_O = $(CMIXDIR)/src/rtcmix/profile.o

# for disk-based insts
RTPROFILE_O = $(CMIXDIR)/src/rtcmix/rtprofile.o

CMIX_O = $(LIBDIR)/main.o
M_O =  $(PARSERDIR)/parse_with_minc.o
IMB_RTCMIX_O = $(LIBDIR)/RTcmix.o
P_O =  $(PARSERDIR)/parse_with_perl.o
PY_O = $(PARSERDIR)/parse_with_python.o

CMIXOBJS = $(CMIX_O) $(M_O) $(GENLIB)
IMBCMIXOBJS = $(IMB_RTCMIX_O) $(GENLIB)

