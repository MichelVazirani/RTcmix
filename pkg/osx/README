To build a package, do these steps in this order.

$ make distclean	# in rtcmix src tree
$ ./configure --with-perl --with-python

Then uncomment the definition of PKG in makefile.conf.  
This causes a redefinition of LIBDESTDIR to point to
/Applications/rtcmix/shlib.

$ sudo install -d -m 775 /Applications/rtcmix
$ make
$ sudo make install

This will put the dso's in the new LIBDESTDIR.

Finally, in the pkg/osx dir, type "make".  That will put
an installable package on your Desktop.

Or rather, it used to, before Apple removed the PackageMaker
command-line tool. Now our prep-package script, which does
the work of preparing a distribution, runs correctly, but
you'll seen an error message about not being able to find
the PackageMaker tool.  Now you have to open the PackageMaker
GUI and use the included RTcmix-Intel.pmdoc file, first
editing the Install field in the Configuration pane so
that it points to the pkg/osx/rtcmix directory created by
prep-package. Then press the Build button.

If you don't create and fill /Applications/rtcmix,
you'll see an error message when making the package.

Before testing, delete /Applications/rtcmix, and make
sure that your .rtcmixrc does not have a dso_path string.

Reset PKG, clean and remake/install RTcmix.

(To streamline this process, we need to avoid hardcoding the
shared lib dir that's used in the load command.  Many places
in RTcmix use SHAREDLIBDIR, which comes from LIBDESTDIR.  We
should set this at run-time by default to the location that
also contains the RTcmix bin directory, and allow this location
to be overridden by .rtcmixrc.  Unfortunately, there seems
to be no way to get reliably the path of a program, like
CMIX.  See comments in RTcmixMain::RTcmixMain.)

