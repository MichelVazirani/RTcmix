#!/bin/sh
# Splice together one segment each of two sound files and play them.
# If last out time not given, play until end of second file.
# Only works for mono and stereo files.
# JGG, 7/31/03

if [ $# -lt 5 ]
then
   echo  Usage: `basename $0` file1 in1 out1 file2 in2 \[out2\]
   echo "       (splice two sound file segments, defined by in,out times)"
   exit 1
fi

flags='-q'

script='
ramplen = .002;
file1 = s_arg(0);
in1 = f_arg(1);
out1 = f_arg(2);
file2 = s_arg(3);
in2 = f_arg(4);
if (n_arg() > 5) {
   out2 = f_arg(5)
}
else {
   out2 = -1
}

rtsetparams(44100, 2);
load("STEREO");
amp = 1;
setline_size(20000);
reset(20000);

rtinput(file1);
if (out1 <= in1) {
   str_num("out time (", out1, ") must be greater than in time (", in1, ")");
   exit(1);
}
dur1 = out1 - in1;
setline(0,0, ramplen,1, dur1-ramplen,1, dur1,0);
if (CHANS() == 1) {
   STEREO(0, in1, dur1, amp, .5)
}
else {
   STEREO(0, in1, dur1, amp, 1, 0)
}

rtinput(file2);
if (out2 == -1) {
   dur2 = DUR() - in2
}
else {
   dur2 = out2 - in2
}
if (CHANS() == 1) {
   STEREO(dur1, in2, dur2, amp, .5)
}
else {
   STEREO(dur1, in2, dur2, amp, 1, 0)
}
'
echo $script | CMIX $flags $*

